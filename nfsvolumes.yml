apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodb
  namespace: prod
spec:
  selector:
    matchLabels:
      app: mongodb
  replicas: 1 ### for databases create replica only one
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
      - name: mongocon
        image: mongo
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: bittu
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: bittu@123
        volumeMounts:
        - name: mongonfsvol
          mountPath: /data/db
      volumes:
      - name: mongonfsvol
        nfs:
         server: 172.31.34.88
         path: /mnt/nfs_share

---
apiVersion: v1
kind: Service
metadata:
  name: mongosvc
  namespace: prod
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
################################################
##this is to bring up the application
###################################################      
---
apiVersion: apps/v1
kind: Deployment 
metadata: 
  name: spring-deployment 
  namespace: prod 
  labels: 
    app: spring 
spec: 
  replicas: 2
  selector: 
    matchLabels: 
      app: spring
  template: 
    metadata: 
      labels: 
        app: spring 
    spec: 
      containers: 
      - name: spring-application 
        image: kkeducation12345/spring-app:1.0.0
        ports: 
        - containerPort: 8080
        env: 
        - name: MONGO_INITDB_ROOT_USERNAME
          value: bittu
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: bittu@123 
        volumeMounts: 
        - name: mongonfsvol
          mountPath: /data/db
      volumes: 
      - name: mongonfsvol
        nfs: 
          server: 172.31.34.88
          path: /mnt/nfs_share

---
apiVersion: v1 
kind: Service
metadata: 
  name: nodeportsvs
  namespace: prod 
spec: 
  type: NodePort 
  selector: 
    app: spring 
  ports: 
  - port: 80
    targetPort: 8080 
    nodePort: 30036
  







      

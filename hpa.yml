apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata: 
  name: hpa
  namespace: dev  
spec: 
  scaleTargetRef: 
    apiVersion: apps/v1
    kind: Deployment
    name: hpa-deployment
  minReplicas: 1
  maxReplicas: 5
  metrics: 
  - type: Resource 
    resource: 
      name: cpu 
      target: 
        type: Utilization
        averageUtilization: 30
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
--- 
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hpa-deployment
  labels: 
    name: hpa-deployment 
spec:
  replicas: 1
  selector: 
    matchLabels:
      name: hpa-deployment 
  template: 
    metadata:
      labels: 
        name: hpa-deployment 
    spec: 
      containers:
      - name: hpa-container
        image: k8s.gcr.io/hpa-example
        ports: 
        - name: hpa
          containerPort: 80 
        resources: 
          requests: 
            cpu: "100m"
            memory: "64Mi" 
          limits: 
            cpu: "100m"
            memory: "128Mi"  

---
apiVersion: v1
kind: Service
metadata: 
  namespace: dev  
  name: hpa-service  
  labels: 
    name: hpa-service
spec: 
  type: NodePort 
  ports: 
  - port: 80 
    targetPort: 80 
  selector: 
    name: hpa-deployment 
###########################################################################
# we have to add load generator to test the hpa
### kubectl run -i --tty load-generator --rm --image=busybox /bin/sh
# while true;
#    do wget -q -O- http://hpa-service.dev;
#    done	


    
